import { useState } from "react";
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Icon from "@/components/ui/icon";

const ChooseGift = () => {
  const [selectedCategory, setSelectedCategory] = useState<string>("");

  const giftCategories = {
    gender: [
      {
        id: "for-him",
        title: "–î–ª—è –Ω–µ–≥–æ",
        icon: "User",
        gifts: ["–ß–∞—Å—ã", "–ì–∞–¥–∂–µ—Ç—ã", "–ö–Ω–∏–≥–∏", "–°–ø–æ—Ä—Ç—Ç–æ–≤–∞—Ä—ã"],
      },
      {
        id: "for-her",
        title: "–î–ª—è –Ω–µ—ë",
        icon: "Heart",
        gifts: ["–£–∫—Ä–∞—à–µ–Ω–∏—è", "–ö–æ—Å–º–µ—Ç–∏–∫–∞", "–¶–≤–µ—Ç—ã", "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã"],
      },
    ],
    age: [
      {
        id: "kids",
        title: "–î–µ—Ç—è–º",
        icon: "Baby",
        gifts: ["–ò–≥—Ä—É—à–∫–∏", "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã", "–ö–Ω–∏–≥–∏", "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"],
      },
      {
        id: "teens",
        title: "–ü–æ–¥—Ä–æ—Å—Ç–∫–∞–º",
        icon: "Gamepad2",
        gifts: ["–ì–∞–¥–∂–µ—Ç—ã", "–ò–≥—Ä—ã", "–û–¥–µ–∂–¥–∞", "–ú—É–∑—ã–∫–∞"],
      },
      {
        id: "adults",
        title: "–í–∑—Ä–æ—Å–ª—ã–º",
        icon: "Users",
        gifts: ["–¢–µ—Ö–Ω–∏–∫–∞", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–•–æ–±–±–∏", "–û–ø—ã—Ç"],
      },
    ],
    interests: [
      {
        id: "tech",
        title: "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        icon: "Smartphone",
        gifts: ["–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã", "–ù–æ—É—Ç–±—É–∫–∏", "–ì–∞–¥–∂–µ—Ç—ã", "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã"],
      },
      {
        id: "sport",
        title: "–°–ø–æ—Ä—Ç",
        icon: "Dumbbell",
        gifts: ["–¢—Ä–µ–Ω–∞–∂—ë—Ä—ã", "–û–¥–µ–∂–¥–∞", "–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ", "–ü–∏—Ç–∞–Ω–∏–µ"],
      },
      {
        id: "art",
        title: "–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ",
        icon: "Palette",
        gifts: ["–ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", "–ö—É—Ä—Å—ã", "–ö–Ω–∏–≥–∏"],
      },
    ],
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 to-pink-50">
      <div className="container mx-auto px-4 py-8">
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-4xl font-bold text-gray-900">üéÅ –í—ã–±–æ—Ä –ø–æ–¥–∞—Ä–∫–∞</h1>
          <Link to="/">
            <Button variant="outline" className="flex items-center gap-2">
              <Icon name="ArrowLeft" size={16} />
              –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Button>
          </Link>
        </div>

        <Tabs defaultValue="gender" className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-8">
            <TabsTrigger value="gender">–ü–æ –ø–æ–ª—É</TabsTrigger>
            <TabsTrigger value="age">–ü–æ –≤–æ–∑—Ä–∞—Å—Ç—É</TabsTrigger>
            <TabsTrigger value="interests">–ü–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º</TabsTrigger>
          </TabsList>

          <TabsContent value="gender">
            <div className="grid md:grid-cols-2 gap-6">
              {giftCategories.gender.map((category) => (
                <Card
                  key={category.id}
                  className="hover:shadow-lg transition-shadow cursor-pointer"
                  onClick={() => setSelectedCategory(category.id)}
                >
                  <CardHeader className="text-center">
                    <Icon
                      name={category.icon as any}
                      size={48}
                      className="mx-auto mb-4 text-purple-600"
                    />
                    <CardTitle className="text-2xl">{category.title}</CardTitle>
                    <CardDescription>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-2 gap-2">
                      {category.gifts.map((gift, index) => (
                        <div
                          key={index}
                          className="bg-purple-100 rounded-lg p-3 text-center text-sm"
                        >
                          {gift}
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="age">
            <div className="grid md:grid-cols-3 gap-6">
              {giftCategories.age.map((category) => (
                <Card
                  key={category.id}
                  className="hover:shadow-lg transition-shadow cursor-pointer"
                  onClick={() => setSelectedCategory(category.id)}
                >
                  <CardHeader className="text-center">
                    <Icon
                      name={category.icon as any}
                      size={48}
                      className="mx-auto mb-4 text-pink-600"
                    />
                    <CardTitle className="text-xl">{category.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2">
                      {category.gifts.map((gift, index) => (
                        <div
                          key={index}
                          className="bg-pink-100 rounded-lg p-2 text-center text-sm"
                        >
                          {gift}
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="interests">
            <div className="grid md:grid-cols-3 gap-6">
              {giftCategories.interests.map((category) => (
                <Card
                  key={category.id}
                  className="hover:shadow-lg transition-shadow cursor-pointer"
                  onClick={() => setSelectedCategory(category.id)}
                >
                  <CardHeader className="text-center">
                    <Icon
                      name={category.icon as any}
                      size={48}
                      className="mx-auto mb-4 text-blue-600"
                    />
                    <CardTitle className="text-xl">{category.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2">
                      {category.gifts.map((gift, index) => (
                        <div
                          key={index}
                          className="bg-blue-100 rounded-lg p-2 text-center text-sm"
                        >
                          {gift}
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </TabsContent>
        </Tabs>

        {selectedCategory && (
          <div className="mt-8 text-center">
            <p className="text-lg text-gray-600 mb-4">
              –û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ò—â–∏—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
            </p>
            <Button onClick={() => setSelectedCategory("")} variant="outline">
              –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            </Button>
          </div>
        )}
      </div>
    </div>
  );
};

export default ChooseGift;
